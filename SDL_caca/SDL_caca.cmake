# extern VideoBootStrap CACA_bootstrap;

dep_option(SDL_CACA                "Use caca video driver" ON "SDL_VIDEO" OFF)
dep_option(SDL_CACA_SHARED         "Dynamically load caca support" ON "SDL_CACA" OFF)


list(APPEND SDL_EXTERNAL_VIDEO_DRIVERS "CACA")

if(SDL_CACA)
  set(CACA_PKG_CONFIG_SPEC "caca")
  pkg_check_modules(PC_CACA IMPORTED_TARGET ${CACA_PKG_CONFIG_SPEC})
  if(PC_CACA_FOUND)
    sdl_glob_sources("${SDL_MODULE_DIR}/src/video/caca/*.c")
    sdl_compile_definitions(PRIVATE "SDL_VIDEO_DRIVER_CACA")
    set(HAVE_CACA TRUE)
    set(HAVE_CACA_SHARED FALSE)
    if(SDL_CACA_SHARED)
      if(HAVE_SDL_LOADSO)
        FindLibraryAndSONAME("caca" LIBDIRS ${PC_CACA_LIBRARY_DIRS})
        if(CACA_LIB AND CACA_SHARED)
          sdl_link_dependency(caca INCLUDES $<TARGET_PROPERTY:PkgConfig::PC_CACA,INTERFACE_INCLUDE_DIRECTORIES>)
          sdl_compile_definitions(PRIVATE "SDL_VIDEO_DRIVER_CACA_DYNAMIC=\"${CACA_LIB_SONAME}\"")
          set(HAVE_CACA_SHARED TRUE)
        else()
          message(WARNING "Unable to find caca shared object")
        endif()
      else()
        message(WARNING "You must have SDL_LoadObject() support for dynamic caca loading")
      endif()
    else()
      sdl_link_dependency(caca LIBS PkgConfig::PC_CACA PKG_CONFIG_PREFIX PC_CACA PKG_CONFIG_SPECS "${CACA_PKG_CONFIG_SPEC}")
    endif()
  endif()
else()
  set(HAVE_CACA FALSE)
  message(WARNING "Unable to find the caca development library")
endif()
